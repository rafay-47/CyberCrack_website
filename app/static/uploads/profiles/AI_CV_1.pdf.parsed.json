{"name": "Abdul Rafay", "email": "abdulrafay1747@gmail.com", "phone": "+92 3115781747", "headline": "Software Engineer", "location": "Rawalpindi", "summary": "Computer Science graduate with hands-on experience in AI and software development, proficient in building predictive models, developing web and mobile applications, and designing scalable systems. Skilled in Python, TensorFlow, Scikit-learn, .NET, Flutter, and the MERN stack. Strong foundation in algorithms, MLOps practices, and DevOps workflows. Eager to contribute to AI-driven projects in a dynamic environment.", "skills": ["Python", "C++", "C#", "Dart", "Kotlin", "JavaScript", "SQL", "TensorFlow", "Scikit-learn", "NumPy", "Pandas", "Flask", "FastAPI", "MLflow", "DVC", "ASP.NET Core", "React.js", "Next.js", "Nest.js", "Flutter", "Git", "Jenkins", "Docker", "Prometheus", "Grafana", "AWS", "Google Cloud", "ModelBit", "Firebase", "Railway", "MySQL", "SQL Server", "MongoDB", "Firebase Firestore", "Realtime Database"], "work_experience": [{"title": "Intern", "company": "InternnCraft", "start": "June 2024", "end": "August 2024", "description": "Developed and deployed cross-platform mobile applications using Flutter and Dart. Implemented responsive UI designs with custom animations and transitions. Integrated Firebase Authentication, Cloud Firestore, and Realtime Database for seamless backend operations and data synchronization. Constructed RESTful API interfaces to connect with external services, implementing efficient error handling and caching strategies. Utilized Git for version control and implemented CI/CD pipelines to streamline the development and deployment process."}], "education": [{"school": "FAST NUCES, Islamabad", "degree": "Bachelor of Science in Computer Science (BSCS)", "start": "2021", "end": "2025", "description": null}], "projects": [{"title": "LeafSpec \u2013 FYP", "link": "GitHub Links: (Flutter app | Model files)", "description": "Developed a Flutter app that classifies plant species from leaf images using a deep learning model. Trained and evaluated CNNs including LeNet-5, AlexNet, EfficientNet; deployed fine-tuned ResNet based on accuracy. Integrated the model via a Python backend using Modelbit, returning predictions with confidence scores. Displayed 25+ plant attributes (sunlight, soil type, growth rate, etc.) using dynamic UI backed by MongoDB. Included Google Sign-In, favorite species, and reusable widget structure."}, {"title": "Video Frame Prediction \u2013 UCF101", "link": "GitHub Link: (Repo)", "description": "Developed and compared ConvLSTM, PredRNN, and Transformer-based architectures to predict 5\u201310 future frames from 10 input frames on the UCF101 dataset. Engineered data preprocessing pipelines for frame extraction, resizing to 64\u00d764, normalization, and sequence batching. Built a Flask web service exposing a REST API that accepts input frame sequences and returns predicted frames and reconstructed video clips. Designed a simple frontend dashboard to upload video clips, visualize input vs. predicted frames, and download reconstructed predictions."}, {"title": "MLOps Environmental Monitoring & Pollution Prediction System", "link": "GitHub Links: (Repo)", "description": "Architected an end-to-end MLOps pipeline: data ingestion from OpenWeatherMap API, versioning with DVC, and experiment tracking in MLflow. Implemented ARIMA and LSTM time-series models for short-term air quality (AQI) forecasting; automated model retraining upon new data arrival. Deployed the predictive service via a Flask API containerized with Docker, facilitating real-time AQI predictions. Integrated Prometheus for metrics collection (latency, throughput, model accuracy) and built Grafana dashboards for live system and model performance monitoring."}, {"title": "CyberCrack Interview Trainer", "link": "Website Link: (Website)", "description": "Built a desktop application with Tkinter for live cybersecurity interview practice. Implemented real-time audio capture and transcription using OpenAI Whisper, with speaker-optimized \u201cInterview Mode.\u201d Integrated GPT-powered AI feedback on user responses and screenshot-based code review. Designed license management system supporting trial periods, license activation, and status indicators; included Prometheus metrics for usage monitoring."}], "certifications": ["LangChain for LLM Application Development (Feb. 2025)", "DeepLearning.AI: Certificate"], "languages": [], "links": ["LinkedIn", "Github", "mailto:abdulrafay1747@gmail.com", "https://www.linkedin.com/in/abdul-rafay-sheikh-40273a298/", "https://github.com/rafay-47", "https://github.com/rafay-47/LeafSpec", "https://github.com/AhmadRafiq90/Fyp_repo", "https://github.com/rafay-47/Video-Prediction-using-deep-learning", "https://github.com/rafay-47/Environmental-Monitoring-and-Pollution-Prediction-System", "https://www.getcybercrack.com/", "https://learn.deeplearning.ai/accomplishments/53990db6-066b-4f48-a0fd-b0d1bbb9a8d9?usp=sharing"], "extracted_keywords": ["AI", "Software Development", "Python", "TensorFlow", "Scikit-learn", "NET", "Flutter", "MERN stack", "Algorithms", "MLOps", "DevOps"]}